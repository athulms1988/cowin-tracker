const START_TRACKING="start_tracking",STOP_TRACKING="stop_tracking",TRACKED_RESULT="tracked_result";function intervalList(){return[{label:"5min",value:5,interval:3e5},{label:"10min",value:10,interval:6e5},{label:"15min",value:15,interval:9e5},{label:"20min",value:20,interval:12e5},{label:"30min",value:30,interval:18e5},{label:"45min",value:45,interval:27e5},{label:"1hr",value:100,interval:36e5}]}function getInterval(e){return(intervalList().find(t=>t.value===e)||{}).interval||6e5}function fetchCenters(e,t,n,a){return fetch("/api/fetchCenters",{method:"POST",headers:{"Content-type":"application/json"},body:JSON.stringify({district:e,date:t,pincode:n,isPincode:a})}).then(e=>e.ok?e.json():{centers:[]})}function establishVaccineChecker(e){const{date:t,district:n,pincode:a,isPincode:i,interval:l}=e;if(t&&(i&&a||!i&&n)){const e=getInterval(l);return setInterval(()=>{(async()=>{const e=await fetchCenters(n,t,a,i),{centers:l=[]}=e||{};postMessage({type:TRACKED_RESULT,payload:[...l]})})()},e)}return null}let timer;addEventListener("message",e=>{const{data:{type:t,payload:n}}=e;t===START_TRACKING?timer=establishVaccineChecker(n):t===STOP_TRACKING&&clearInterval(timer)});
